{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40ac7715.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color,text, onClick}) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={onClick} style ={{ backgroundColor : color}} className='btn'>{text}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n    const onClick = () => {console.log('click')}\r\n    return (\r\n       <header className=\"header\">\r\n           \r\n           <h1>{title}</h1>\r\n           <Button color={showAdd ? 'red' : 'green'} text ={showAdd ? 'Close' : 'Add'} onClick={onAdd} />\r\n    \r\n       </header>\r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\n// const headingStyles ={\r\n//     color:'red',\r\n//     backgroundColor: 'brown'\r\n// }\r\n\r\nexport default Header\r\n","import {FaTimes} from 'react-icons/fa'\r\n\r\nconst Task = ({task, onDelete, onToggle}) => {\r\n    return (\r\n        <div className ={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick = {() => {\r\n            onToggle(task.id)\r\n        }}>\r\n            <h3>\r\n                {task.text} <FaTimes style ={{color:'red', cursor: 'pointer'}} onClick = {() => \r\n                    onDelete(task.id)} />\r\n            </h3>\r\n            <p>{task.day}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task","import Task from './Task'\r\n\r\nconst Tasks = ({tasks, onDelete, onToggle}) => {\r\n    \r\n    return (\r\n        \r\n        <>\r\n        {tasks.map((task) => (\r\n            <Task key={task.id} task = {task} onDelete = {onDelete} onToggle = {onToggle} />\r\n        ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks","import React from 'react'\r\nimport {useState} from 'react'\r\n\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(!text){\r\n            alert(\"Please add task\");\r\n            return;\r\n        }\r\n\r\n        onAdd({text, day, reminder})\r\n            setText('')\r\n            setDay('')\r\n            setReminder(false)\r\n\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n       <form className = 'add-form' onSubmit={onSubmit}>\r\n           <div className ='form-control'>\r\n               <label>Task</label>\r\n               <input type='text' placeholder='Add Task' value ={text} onChange = {(e) => {\r\n                   setText(e.target.value)}\r\n                   }></input>\r\n           </div>\r\n           <div className ='form-control'>\r\n               <label>Day and Time</label>\r\n               <input type='text' placeholder='Add Day and Time' value ={day} onChange = {(e) => {\r\n                   setDay(e.target.value)}\r\n                   }></input>\r\n           </div>\r\n           <div className ='form-control form-control-check'>\r\n               <label>Set Reminder</label>\r\n               <input type='checkbox' value ={reminder} checked={reminder} onChange = {(e) => {\r\n                   setReminder(e.currentTarget.checked)}\r\n                   } ></input>\r\n           </div>\r\n           <input type='submit' value='Save Task' className='btn btn-block'></input>\r\n       </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import {useState} from 'react' \nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(true);\n  const [tasks, setTasks] = useState([\n    {\n        id: 1,\n        text: 'Doctor Appointment',\n        day: 'Feb 5th at 2:30 PM',\n        reminder: true,\n    },\n    {\n        id: 2,\n        text: 'Meeting at school',\n        day: 'Feb 6th at 1:30 PM',\n        reminder: true,\n    },\n    {\n        id: 3,\n        text: 'Food Shopping',\n        day: 'Feb 5th at 2:30 PM',\n        reminder: false,\n    }\n])\n\n\n//Add task\n\nconst addTask = (task) =>{\n  const id = Math.floor(Math.random() * 10000)+1;\n  const newTask = {id,...task};\n  setTasks([...tasks,newTask]);\n}\n\n//Delete Task\n\nconst deleteTask = (id) => {\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n//Toggle Reminder\n\nconst toggleReminder = (id) => {\n  setTasks(tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder} : task))\n}\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ?<Tasks tasks={tasks} onDelete={deleteTask} onToggle = \n      {toggleReminder} /> : 'No Tasks to show'}\n\n     \n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}